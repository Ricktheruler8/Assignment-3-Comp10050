19:15:42 **** Incremental Build of configuration Debug for project CrossFire3 ****
make all 
Building file: ../main.c
Invoking: GCC C Compiler
gcc -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"main.d" -MT"main.o" -o "main.o" "../main.c"
../main.c: In function ‘main’:
../main.c:207:14: error: subscripted value is neither array nor pointer nor vector
       if(slot[a-1].counter==1){ // see line 150 for variable a, a-1 will be slot below player current pos. counter has value of 1 or 0. 1 for player present, 0 for no player present
              ^
../main.c:212:20: error: subscripted value is neither array nor pointer nor vector
        int b = slot[a-1].Slot_Tag; // SEE line 118 for explanation on slot_Tag. slot[a-1].slot_tag represents player[0] to player[5]. value is stored in variable b which is then used as index value inside call to attack function
                    ^
../main.c:215:19: error: subscripted value is neither array nor pointer nor vector
       else if(slot[a-1].counter==0){ // else counter is 0 meaning no one is present and slot is free to move to.
                   ^
../main.c:217:41: error: subscripted value is neither array nor pointer nor vector
        strcpy(player[i].Current_Pos,slot[a-1].Slot_Type); // player current pos gets string value of new slot type moved too.
                                         ^
../main.c:219:12: error: subscripted value is neither array nor pointer nor vector
        slot[a].counter -= 1; // pevious slot[a] counter is returned to 0 leaving slot free for another player.
            ^
../main.c:220:12: error: subscripted value is neither array nor pointer nor vector
        slot[a-1].counter += 1; // new slot counter is updated to 1 leaving slot occupied for player attack
            ^
../main.c:221:12: error: subscripted value is neither array nor pointer nor vector
        slot[a].Slot_Tag = -1; // previous slot tag is updated back to -1 meaning no player is present to attack
            ^
../main.c:222:12: error: subscripted value is neither array nor pointer nor vector
        slot[a-1].Slot_Tag = i; // new slot tag is updated with player number
            ^
../main.c:238:14: error: subscripted value is neither array nor pointer nor vector
       if(slot[a+1].counter==1){
              ^
../main.c:243:20: error: subscripted value is neither array nor pointer nor vector
subdir.mk:54: recipe for target 'main.o' failed
        int b = slot[a+1].Slot_Tag;
                    ^
../main.c:246:19: error: subscripted value is neither array nor pointer nor vector
       else if(slot[a+1].counter==0){
                   ^
../main.c:248:41: error: subscripted value is neither array nor pointer nor vector
        strcpy(player[i].Current_Pos,slot[a+1].Slot_Type);
                                         ^
../main.c:250:12: error: subscripted value is neither array nor pointer nor vector
        slot[a].counter -= 1;
            ^
../main.c:251:12: error: subscripted value is neither array nor pointer nor vector
        slot[a+1].counter += 1;
            ^
../main.c:252:12: error: subscripted value is neither array nor pointer nor vector
        slot[a].Slot_Tag = -1;
            ^
../main.c:253:12: error: subscripted value is neither array nor pointer nor vector
        slot[a+1].Slot_Tag = i;
            ^
../main.c:269:14: error: subscripted value is neither array nor pointer nor vector
       if(slot[a+1].Slot_Tag==-1 && slot[a-1].Slot_Tag==-1){ // conditional checks if both slots surrounding player are empty
              ^
../main.c:269:40: error: subscripted value is neither array nor pointer nor vector
       if(slot[a+1].Slot_Tag==-1 && slot[a-1].Slot_Tag==-1){ // conditional checks if both slots surrounding player are empty
                                        ^
../main.c:274:19: error: subscripted value is neither array nor pointer nor vector
       else if(slot[a+1].Slot_Tag>-1 && slot[a-1].Slot_Tag>-1){ // if both slots surounding player are occupied enter compound statement
                   ^
../main.c:274:44: error: subscripted value is neither array nor pointer nor vector
       else if(slot[a+1].Slot_Tag>-1 && slot[a-1].Slot_Tag>-1){ // if both slots surounding player are occupied enter compound statement
                                            ^
../main.c:283:21: error: subscripted value is neither array nor pointer nor vector
         int c = slot[a-1].Slot_Tag; // player below will be in position a - 1 where a is player current pos
                     ^
../main.c:288:21: error: subscripted value is neither array nor pointer nor vector
         int c = slot[a+1].Slot_Tag; // slot a+1 is slot above current pos of a
                     ^
../main.c:292:19: error: subscripted value is neither array nor pointer nor vector
       else if(slot[a+1].Slot_Tag!=-1){ // checks if there is a player in position above if so attack
                   ^
../main.c:294:20: error: subscripted value is neither array nor pointer nor vector
        int b = slot[a+1].Slot_Tag;
                    ^
../main.c:297:19: error: subscripted value is neither array nor pointer nor vector
       else if(slot[a-1].Slot_Tag!=-1){ // if no player above then attack player below
                   ^
../main.c:299:20: error: subscripted value is neither array nor pointer nor vector
        int b = slot[a-1].Slot_Tag;
                    ^
make: *** [main.o] Error 1

19:15:42 Build Finished (took 186ms)

