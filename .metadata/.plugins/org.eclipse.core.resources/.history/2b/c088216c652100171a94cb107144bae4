/*
 * scoutPlayer.c
 *
 *  Created on: 14 Apr 2017
 *      Author: richie
 */
#include <stdio.h>
#include <stdlib.h>
#include "crossops.h"

struct slot* currSlot = NULL;
struct slot *foundSlots;
bool explored[BOARD_SIZE][BOARD_SIZE];
int count =0;
int near = 1;
int far = 5;

//pointer to slot (0,0)
struct slot *upLeft;

//pointer to slot (0,boardSize -1)
struct slot *upRight;

//pointer to slot (boardSize - 1, 0)
struct slot *downLeft;

//pointer to slot (boardSize - 1, boardSize -1)
struct slot *downRight;

void scoutPlayer(int row, int column){


	if(row >= BOARD_SIZE/2){
		if(column >= BOARD_SIZE/2)
			currSlot = reachDesiredElement(row,column,downRight);
		else

			currSlot = reachDesiredElement(row,column,downLeft);
	} else {

		if(column >= BOARD_SIZE/2)
			currSlot = reachDesiredElement(row,column, upRight);

		else currSlot = reachDesiredElement(row,column,upLeft);
	}

	for(int i=0; i<BOARD_SIZE; i++){
		for(int j=0; j<BOARD_SIZE;j++){
			explored[i][j] = false;
		}
	}

	foundSlots = malloc(BOARD_SIZE * BOARD_SIZE * sizeof(struct slot ));
	printf("\n\nFunction findSlotsinvoked:\n");

	if(currSlot!= NULL){

		findSlots(far,2, currSlot, foundSlots, &count, explored);

		printf("%d",count);

		for(int i=0; i<count; i++){

			printf("(%d, %d, %s)-> ",foundSlots[i].row, foundSlots[i].column,foundSlots[i].Slot_Type);
			fflush(stdout);
		}
	}
}

