/*
 * scoutPlayer.c
 *
 *  Created on: 14 Apr 2017
 *      Author: richie
 */
#include <stdio.h>
#include <stdlib.h>
#include "crossops.h"

struct slot* currSlot = NULL;
struct slot *foundSlots;
bool explored[BOARD_SIZE][BOARD_SIZE];
int count =0;
int near = 1;
int far = 5;

void scoutPlayer(int row, int column, struct slot **board, struct slot * upLeft, struct slot * upRight, struct slot * downLeft, struct slot * downRight){



	if(row >= BOARD_SIZE/2){
		if(column >= BOARD_SIZE/2)
			currSlot = reachDesiredElement(row,column,downRight);
		else

			currSlot = reachDesiredElement(row,column,downLeft);
	} else {

		if(column >= BOARD_SIZE/2)
			currSlot = reachDesiredElement(row,column, upRight);

		else currSlot = reachDesiredElement(row,column,upLeft);
	}

	for(int i=0; i<BOARD_SIZE; i++){
		for(int j=0; j<BOARD_SIZE;j++){
			explored[i][j] = false;
		}
	}

	//printf("\n\nFunction findSlotsinvoked:\n");
	foundSlots = malloc(BOARD_SIZE * BOARD_SIZE * sizeof(struct slot ));

	if(currSlot!= NULL){

		findSlots(far,0, currSlot, foundSlots, &count, explored);

		for(size_t i=0; i<count; i++){

			if(foundSlots[i].Slot_Tag != -1 && foundSlots[i].counter == 1){ //&& (foundSlots[i].row == row+1 || foundSlots[i].row == row-1 || foundSlots[i].column == column+1 || foundSlots[i].column == column-1)){

				int enemy = foundSlots[i].Slot_Tag;
				int enemyRow = foundSlots[i].row;
				int enemyCol = foundSlots[i].column;

				printf("\nEnemy found for attack\nLocation: (%d, %d)\nEnemy: player[%d]\n", enemyRow,enemyCol,enemy);
				fflush(stdout);

				/*int answer = 0;
				puts("would you like to attack?\n");
				scanf("%d%*c",&answer);

				//if(answer == 1 && (foundSlots[i].row != row+1 || foundSlots[i].row != row-1 || foundSlots[i].column != column+1 || foundSlots[i].column != column-1)){

				//}*/
				free(foundSlots);
			}

		}
	}
}

